<%- include("../partials/user/header.ejs") %>

<!-- CSS -->
<link href="/css/bootstrap.min.css" rel="stylesheet">
<link href="/css/header.css" rel="stylesheet">
<link href="/css/footer.css" rel="stylesheet">
<link href="/css/home.css" rel="stylesheet">
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.23.0/dist/sweetalert2.min.css">
<link rel="stylesheet" href="/css/user/product-page.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
/* Product title container */
.product-title {
  font-weight: bolder;
  color: #222;
  line-height: 1.4;
}

/* Specification badges */
.spec-badge {
  display: inline-flex;
  align-items: center;
  background: linear-gradient(135deg, #e3f2fd, #bbdefb);
  color: #0d47a1;
  padding: 5px 12px;
  margin: 4px;
  border-radius: 20px;
  font-size: 13px;
  font-weight: 500;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
  transition: all 0.2s ease-in-out;
}

.spec-badge:hover {
  background: linear-gradient(135deg, #bbdefb, #90caf9);
  transform: translateY(-1px);
}

/* Icon inside spec badge */
.spec-badge i {
  margin-right: 5px;
  font-size: 14px;
  color: #1565c0;
}

/* Highlights or features */
.product-title .highlights {
  display: block;
  font-size: 14px;
  color: #666;
  margin-top: 5px;
  font-style: italic;
}

/* SKU text */
.product-title .sku {
  display: block;
  font-size: 13px;
  color: #999;
  margin-top: 4px;
}

/* Responsive tweaks */
@media (max-width: 768px) {
  .product-title {
    font-size: 1.3rem;
    flex-direction: column;
    align-items: flex-start;
  }
  .spec-badge {
    font-size: 12px;
    padding: 4px 10px;
  }
}


</style>


<section class="product-page">
  <div class="product-container">
    
    <!-- Left Side - Image Gallery -->
    <div class="product-images-section">
      <div class="image-gallery">
        <div class="thumbnail-list" id="thumbnailList">
          <!-- thumbnails rendered by JS -->
        </div>

        <div class="main-image-container">
          <img class="main-image" id="mainImage" src="<%= (product.variants && product.variants[0] && product.variants[0].product_image && product.variants[0].product_image[0]) ? product.variants[0].product_image[0] : '/images/placeholder.png' %>" alt="<%= product.name %>">

          <% if(product.discountPercentage > 0){ %>
            <div class="discount-badge" id="discountBadge">
              <%= product.discountPercentage %>% OFF
            </div>
          <% } else { %>
            <div class="discount-badge" id="discountBadge" style="display:none;"></div>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Right Side - Product Details -->
    <div class="product-details-section">
      <!-- Breadcrumb -->
      <div class="product-breadcrumb">
        <a href="/">Home</a> / 
        <a href="/products">Products</a> / 
        <%= product.name %>
      </div>

      <!-- Product Title -->
<h1 class="product-title">
  <% 
    const brand = product.brand?.name || '';
    const model = product.description || product.name || '';
    const display = product.variants[0].specifications?.display || '';
    const sku = product.sku || '';

    const primaryFields = ['ram', 'storage', 'battery', 'display'];
    const secondaryFields = ['connectivity', 'os', 'gpu', 'color', 'sim'];

    const specsPrimary = [];
    const specsSecondary = [];
    const highlights = [];

    const icons = {
      ram: "bi-memory",
      storage: "bi-hdd",
      battery: "bi-battery-half",
      display: "bi-display",
      sim: "bi-sim",
      connectivity: "bi-wifi",
      color: "bi-palette",
      os: "bi-laptop",
      gpu: "bi-controller"
    };

    const badgeColors = {
      ram: "badge-blue",
      storage: "badge-green",
      battery: "badge-orange",
      display: "badge-purple",
      connectivity: "badge-teal",
      default: "badge-lightblue"
    };

    const formatField = (f) => {
      const map = { ram : "RAM", os : "OS", sim : "SIM", gpu : "GPU", color : "Color" };
      return map[f.toLowerCase()] || f.charAt(0).toUpperCase() + f.slice(1);
    };

    categoryFields.forEach(field => {
      if (['images','sku','price','description','stock'].includes(field)) return;
      const value = product?.variants[0]?.specifications?.[field] || product?.variants[0]?.[field];
      if (!value) return;
      const iconClass = icons[field.toLowerCase()] || "";
      const colorClass = badgeColors[field.toLowerCase()] || badgeColors.default;
      if(primaryFields.includes(field.toLowerCase())) {
        specsPrimary.push({ label: formatField(field), value, iconClass, colorClass });
      } else if(secondaryFields.includes(field.toLowerCase())) {
        specsSecondary.push({ label: formatField(field), value, iconClass, colorClass });
      } else {
        specsSecondary.push({ label: formatField(field), value, iconClass, colorClass });
      }
    });

    const extraFields = ['extraFeatures','specialDesign','modes','gameBooster','audio'];
    extraFields.forEach(field => {
      if (product.specifications?.[field]) highlights.push(product.variants.specifications[field]);
    });
  %>

  <!-- Brand + Model + Display -->
  <% if (brand) { %>
    <span class="brand"><%= brand.toUpperCase() %></span>
  <% } %>
  <% if (model) { %>
    <span class="model">by <%= model %></span>
  <% } %>
  <% if (display) { %>
    <span class="display"><%= display %></span>
  <% } %>

  <!-- Primary Specs -->
  <% if (specsPrimary.length) { %>
    <br>
    <span class="specs">
      <% specsPrimary.forEach(spec => { %>
        <span class="spec-badge <%= spec.colorClass %>" title="<%= spec.value %>">
          <% if (spec.iconClass) { %><i class="bi <%= spec.iconClass %>"></i><% } %>
          <strong><%= spec.label %>:</strong> <%= spec.value %>
        </span>
      <% }) %>
    </span>
  <% } %>

  <!-- Secondary Specs -->
  <% if (specsSecondary.length) { %>
    <br>
    <span class="specs-secondary">
      <% specsSecondary.forEach(spec => { %>
        <span class="spec-badge <%= spec.colorClass %>" title="<%= spec.value %>">
          <% if (spec.iconClass) { %><i class="bi <%= spec.iconClass %>"></i><% } %>
          <strong><%= spec.label %>:</strong> <%= spec.value %>
        </span>
      <% }) %>
    </span>
  <% } %>

  <!-- Extra Highlights -->
  <% if (highlights.length) { %>
    <br>
    <span class="highlights"><%= highlights.join(' | ') %></span>
  <% } %>

  <!-- SKU -->
  <% if (sku) { %>
    <br><span class="sku">(<%= sku %>)</span>
  <% } %>
</h1>

      <p class="product-subtitle"><%= product.category[0]?.name || 'Product' %></p>
      
      <!-- Rating -->
      <div class="rating-section">
        <div class="rating-badge">
          <%= (product.rating || 5.0).toFixed(1) %> <i class="fas fa-star"></i>
        </div>
        <span class="rating-count"><%= product.reviewCount || 5 %> Ratings & Reviews</span>
      </div>

      <!-- Brand -->
      <% if(product.brand){ %>
        <div class="brand-section">
          <img class="brand-logo" src="<%= product.brand.logo || '/images/placeholder.png' %>" alt="<%= product.brand.name %>">
          <span class="brand-name"><%= product.brand.name %></span>
        </div>
      <% } %>

      <!-- Price -->
      <div class="price-section">
        <div id="price-Container" class="price-container">
            <!-- thumbnails rendered by JS -->
        </div>
        <h6 style="color: green;">+ Free Delivery</h6>
      </div>

      <!-- Variants (if multiple) -->
      <% if(product.variants && product.variants.length > 0){ %>
        <div class="variant-section">
          <div class="variant-title">Available Variants</div>
          <div class="variant-options" id="variantOptions">
            <% product.variants.forEach((variant, index) => { %>
              <div class="variant-option <%= index === 0 ? 'selected' : '' %>" data-variant-id="<%= variant._id %>">
                Variant <%= index + 1 %>
              </div>
            <% }) %>
          </div>
        </div>
      <% } %>

      <!-- Action Buttons -->
      <div class="action-buttons">
        <button class="btn-cart add-to-cart" 
          data-product-id="<%= product._id %>"
          data-variant-id="<%= product.variants && product.variants.length>0 ? product.variants[0]._id : '' %>">
          <i class="fas fa-shopping-cart"></i> ADD TO CART
        </button>
        
        <button class="wishlist-btn wishlist-toggle" 
          id="wishlist-btn-<%= product._id %>-<%= product.variants && product.variants[0]?._id %>"
          data-product-id="<%= product._id %>"
          data-variant-id="<%= product.variants && product.variants[0]?._id %>">
          <i class="far fa-heart"></i>
        </button>
      </div>

      <!-- Delivery Info -->
      <div class="delivery-section">
        <div class="delivery-item">
          <i class="fas fa-truck"></i>
          <div>
            <strong>Free Delivery</strong> - Get it by tomorrow
          </div>
        </div>
        <div class="delivery-item">
          <i class="fas fa-undo-alt"></i>
          <div>
            <strong>7 Days Return Policy</strong> - Easy returns & exchanges
          </div>
        </div>
        <div class="delivery-item">
          <i class="fas fa-shield-alt"></i>
          <div>
            <strong>Warranty</strong> - 1 Year Manufacturer Warranty
          </div>
        </div>
      </div>

      <!-- Description -->

      <!-- Specifications -->
      <div class="specifications-section">
        <h2 class="description-title">Specifications</h2>
        <div class="spec-row">
          <div class="spec-label">Brand</div>
          <div class="spec-value"><%= product.brand?.name || 'N/A' %></div>
        </div>
        <div class="spec-row">
          <div class="spec-label">Category</div>
          <div class="spec-value"><%= product.category[0]?.name || 'N/A' %></div>
        </div>
        <div class="spec-row">
          <div class="spec-label">Product ID</div>
          <div class="spec-value"><%= product._id %></div>
        </div>
      </div>
    </div>

  </div>
</section>

  <!-- jQuery first -->
   <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <!-- Axios CDN -->
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  <!-- Owl Carousel if used -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js"></script>

  <!-- WOW.js -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/wow/1.1.2/wow.min.js"></script>

  <!-- SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<!-- Pass variants safely to client: convert _id to string -->
<script>
  const productVariants = <%- JSON.stringify((product.variants || []).map(v => ({ ...v, _id: String(v._id) }))) %> || [];
  const productData = <%- JSON.stringify({ _id: String(product._id), brand ,discountPercentage: product.discountPercentage || 0, appliedDiscountValue: product.appliedDiscountValue || 0, mainPrice: product.mainPrice || 0, finalPrice: product.finalPrice || null }) %>;
 console.log(productData)
  const user = <%- user ? JSON.stringify(user) : 'null' %>;
    const userWishlist = <%- JSON.stringify(user?.wishlists?.products || []) %>;
  </script>

 <!-- Then your main.js -->
  <script src="/js/main.js"></script>
  <script src="/js/addTocart_WishlistCode.js"></script>

<script>
// Image + Variant handling
(function(){
  const thumbnailList = document.getElementById('thumbnailList');
  const mainImage = document.getElementById('mainImage');
  const variantOptionsContainer = document.getElementById('variantOptions');
  const addToCartBtn = document.querySelector('.add-to-cart');
  const wishlistBtn = document.querySelector('.wishlist-toggle');
  const discountBadge = document.getElementById('discountBadge');
  const discountTag = document.getElementById('discountTag');

  function clearChildren(el){
         while(el.firstChild) el.removeChild(el.firstChild);
  }

  function renderThumbnailsForVariant(variant){
    clearChildren(thumbnailList);

    const images = (variant && Array.isArray(variant.product_image) && variant.product_image.length > 0) ? variant.product_image : ['/images/placeholder.png'];

    images.forEach((img, idx) => {
      const div = document.createElement('div');
      div.className = 'thumbnail' + (idx===0? ' active':'');
      div.setAttribute('data-image', img);
      div.innerHTML = `<img src="${img}" alt="Product image ${idx+1}">`;

      div.addEventListener('click', function(){
        document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
        this.classList.add('active');
        mainImage.src = img;
      });

      thumbnailList.appendChild(div);
    });
    // set main image to first
    mainImage.src = images[0];
  }

  function updateProductTitle(variant) {
  const titleEl = document.querySelector(".product-title");
  const specs = variant.specifications || {};

  console.log("Variant specs:", variant.specifications);
  
  let html = `
    <span class="brand">${productData.brand?.toUpperCase() || ''}</span>
    <span class="model">by ${variant.description || ''}</span>
  `;

  const fields = ['ram', 'storage', 'battery', 'display' ,'color'];
    // Loop through all keys that actually exist
  Object.keys(specs).forEach(f => {
    const value = specs[f];
    if (value) {
      html += `
        <span class="spec-badge">
          <strong>${f.toUpperCase()}:</strong> ${value}
        </span>
      `;
    }
  });;

  titleEl.innerHTML = html.trim();
}
  
  function updateProductPrice(variant){
        const priceEl = document.querySelector('.price-container');


  }
  function setSelectedVariantByIndex(index){
    const variant = productVariants[index];
    if(!variant){
      // no variant: show placeholder
      renderThumbnailsForVariant(null);
      if(addToCartBtn) addToCartBtn.setAttribute('data-variant-id', '');
      if(wishlistBtn) wishlistBtn.setAttribute('data-variant-id', '');
      return;
    }

    // Update UI selected class for variant options
    if(variantOptionsContainer){
      const options = variantOptionsContainer.querySelectorAll('.variant-option');
      options.forEach(opt => opt.classList.remove('selected'));
      const selectedOpt = Array.from(options).find(o => String(o.getAttribute('data-variant-id')) === String(variant._id));
      if(selectedOpt) selectedOpt.classList.add('selected');
    }

    // Update buttons data-variant-id
    if(addToCartBtn) addToCartBtn.setAttribute('data-variant-id', variant._id);
    if(wishlistBtn) wishlistBtn.setAttribute('data-variant-id', variant._id);

    // render thumbnails and main image
    renderThumbnailsForVariant(variant);
    updateProductTitle(variant);
    updateProductPrice(variant);

    // If you have variant-specific price/discount values, update them here
    // Example (uses productData object for product-level pricing):
    if(productData && productData.appliedDiscountValue > 0){
      if(discountBadge) discountBadge.style.display = 'block';
      if(discountTag) discountTag.style.display = 'inline';
    } else {
      if(discountBadge) discountBadge.style.display = 'none';
      if(discountTag) discountTag.style.display = 'none';
    }
  }

  // attach click handlers to variant-option elements (if any)
  if(variantOptionsContainer){
    variantOptionsContainer.addEventListener('click', function(e){
      const target = e.target.closest('.variant-option');
      if(!target) return;
      const variantId = target.getAttribute('data-variant-id');
      const idx = productVariants.findIndex(v => String(v._id) === String(variantId));
      if(idx !== -1) setSelectedVariantByIndex(idx);
    });
  }

  // wishlist toggle visual feedback
  if(wishlistBtn){
    wishlistBtn.addEventListener('click', function(){
      this.classList.toggle('active');
      const icon = this.querySelector('i');
      if(icon){
        if(this.classList.contains('active')){
          icon.classList.remove('far');
          icon.classList.add('fas');
        } else {
          icon.classList.remove('fas');
          icon.classList.add('far');
        }
      }
    });
  }

  // Initialize: select first variant if exists, else fallback
  if(productVariants && productVariants.length > 0){
    setSelectedVariantByIndex(0);
  } else {
    setSelectedVariantByIndex(-1);
  }

})();
</script>

<%- include("../partials/user/footer.ejs") %>
