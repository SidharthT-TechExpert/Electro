<!-- Bootstrap & FontAwesome -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

<link rel="stylesheet" href="/css/admin/DashBoard/header.css">
<link rel="stylesheet" href="/css/admin/DashBoard/customerList.css">
<link rel="stylesheet" href="/css/admin/DashBoard/category.css">

<%- include("../../partials/admin/sidebar") %>
<%- include("../../partials/admin/header") %>
<%- include("../../partials/user/messages") %>

<div class="main-content">

  <!-- Page Header -->
  <div class="content-header">
    <h2>Brands</h2>

    <div class="search-actions">
      <form action="/admin/brands" method="get" class="search-form">
        <!-- Search -->
        <div class="search-bar">
          <input autocomplete="off" type="text" name="search" placeholder="Search Brands..."
            value="<%= search || '' %>" id="searchInput">
          <button type="submit"><i class="fas fa-search"></i></button>
        </div>

        <!-- Filter -->
        <select name="status" id="statusFilter" class="filter-select" onchange="this.form.submit()">
          <option value="all" <%=status==='all' ? 'selected' : '' %>>All</option>
          <option value="Active" <%=status==='Active' ? 'selected' : '' %>>Active</option>
          <option value="blocked" <%=status==='blocked' ? 'selected' : '' %>>Blocked</option>
        </select>

        <!-- Refresh -->
        <button type="button" class="btn-icon" onclick="location.reload()">
          <i class="fas fa-sync-alt"></i>
        </button>
      </form>
    </div>
  </div>

  <!-- Add Brand Button -->
  <div class="page-header mb-3">
    <a onclick="addBrandModal()" class="btn btn-primary">+ Add Brand</a>
  </div>

  <!-- Brands Table -->
  <div class="table-wrapper">
    <table class="table align-middle">
      <thead>
        <tr>
          <th>#</th>
          <th>Brand</th>
          <th>Status</th>
          <th>Actions</th>
        </tr>
      </thead>
<tbody>
  <% brandData.forEach((brand, i)=> { %>
    <tr>
      <td><%= i + 1 %></td>

      <!-- Brand column with logo + name -->
      <td class="brand-cell">
        <img src="<%= brand.logo %>" 
             alt="<%= brand.name %> Logo" 
             class="brand-logo">
        <span class="brand-name"><%= brand.name %></span>
      </td>

      <!-- Status -->
      <td class="status-badge-<%= brand._id %>">
        <% if ((brand.status || "").toLowerCase().trim()==="active") { %>
          <span class="badge bg-success">Active</span>
        <% } else { %>
          <span class="badge bg-danger">Blocked</span>
        <% } %>
      </td>

      <!-- Actions -->
      <td class="d-flex gap-2">
        <!-- Toggle -->
        <a href="javascript:void(0);" class="btn-action btn-view toggle-btn"
          data-id="<%= brand._id %>" data-status="<%= brand.status %>"
          title="<%= (brand.status || '').toLowerCase()==='active' ? 'Block Brand' : 'Activate Brand' %>">
          <% if ((brand.status || "").toLowerCase().trim()==="blocked") { %>
            <i class="fa fa-eye"></i>
          <% } else { %>
            <i class="fa fa-eye-slash"></i>
          <% } %>
        </a>

        <!-- Edit -->
        <a class="btn-action btn-edit" onclick="editBrand('<%= brand._id %>', '<%= brand.name %>')" title="Edit Brand">
          <i class="fa fa-edit"></i>
        </a>

        <!-- Delete -->
        <a class="btn-action btn-delete" onclick="deleteBrand('<%= brand._id %>')" title="Delete Brand">
          <i class="fa fa-trash"></i>
        </a>
      </td>
    </tr>
  <% }) %>
</tbody>

    </table>
  </div>

  <%- include("../../partials/admin/pageNavigation") %>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".toggle-btn").forEach((btn) => {
      btn.addEventListener("click", function () {
        const id = this.dataset.id;
        const currentStatus = this.dataset.status;
        const isListed = (currentStatus || "").toLowerCase() === "active";
        const newStatus = isListed ? "blocked" : "active";

        Swal.fire({
          icon: "warning",
          title: "Are you sure?",
          text: isListed
            ? "This will unlist the category. It will no longer be visible to users."
            : "This will list the category. It will be visible to users.",
          showCancelButton: true,
          confirmButtonText: isListed ? "Yes, Unlist!" : "Yes, List!",
          cancelButtonText: "Cancel",
        }).then((result) => {
          if (result.isConfirmed) {
            $.ajax({
              type: "PATCH",
              url: `/admin/categories/toggle-status/${id}`,
              data: { status: newStatus },
              success: function (response) {
                if (response.success) {
                  Swal.fire({
                    icon: "success",
                    title: response.message,
                    showConfirmButton: false,
                    timer: 1500,
                  });

                  // ✅ Update badge
                  const badgeCell = document.querySelector(`.status-badge-${id}`);
                  badgeCell.innerHTML =
                    response.status.toLowerCase() === "listed"
                      ? '<span class="badge bg-success">Listed</span>'
                      : '<span class="badge bg-danger">Unlisted</span>';

                  // ✅ Update button
                  btn.dataset.status = response.status;
                  btn.setAttribute(
                    "title",
                    response.status.toLowerCase() === "listed"
                      ? "Unlist Category"
                      : "List Category"
                  );
                  btn.innerHTML =
                    response.status.toLowerCase() === "listed"
                      ? '<i class="fa fa-eye-slash"></i>'
                      : '<i class="fa fa-eye"></i>';
                } else {
                  Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: response.message,
                  });
                }
              },
              error: function () {
                Swal.fire({
                  icon: "error",
                  title: "Server Error",
                  text: "Please try again!",
                });
              },
            });
          }
        });
      });
    });
  });

  /* Add Brand Modal */
  function addBrandModal() {
    Swal.fire({
      title: "➕ Add New Brand",
      html: `
        <div class="mb-3 text-start">
          <label for="swal-input-name" class="form-label fw-bold">Brand Name</label>
          <input type="text" id="swal-input-name" class="form-control" placeholder="Enter brand name">
        </div>
        <div class="mb-3 text-start">
          <label for="swal-input-logo" class="form-label fw-bold">Brand Logo</label>
          <input type="file" id="swal-input-logo" class="form-control" accept="image/*">
        </div>
      `,
      focusConfirm: false,
      showCancelButton: true,
      confirmButtonText: "Add Brand",
      cancelButtonText: "Cancel",
      customClass: {
        popup: "swal-wide",
        confirmButton: "btn btn-primary",
        cancelButton: "btn btn-secondary me-2"
      },
      buttonsStyling: false,
      preConfirm: () => {
        const name = document.getElementById("swal-input-name").value.trim();
        const file = document.getElementById("swal-input-logo").files[0];

        if (!name) {
          Swal.showValidationMessage("⚠️ Brand name is required!");
          return false;
        }
        if (!file) {
          Swal.showValidationMessage("⚠️ Brand logo is required!");
          return false;
        }

        return { name, file };
      }
    }).then((result) => {
      if (result.isConfirmed) {
        const { name, file } = result.value;

        const formData = new FormData();
        formData.append("name", name);
        formData.append("logo", file);

        $.ajax({
          type: "POST",
          url: "/admin/brands",
          data: formData,
          processData: false,
          contentType: false,
          success: function (response) {
            if (response.success) {
              Swal.fire({
                icon: "success",
                title: "Brand Added!",
                text: response.message,
                timer: 1500,
                showConfirmButton: false,
              }).then(() => location.reload());
            }  else {
              Swal.fire("Error", response.message, "error");
            }
          },
          error: function (xhr) {
            let msg = "Something went wrong!";
           if (xhr.responseJSON && xhr.responseJSON.message) {
             msg = xhr.responseJSON.message; // ✅ get backend message
           }
           Swal.fire("Error", msg, "error");
         },
        });
      }
    });
  }
</script>
